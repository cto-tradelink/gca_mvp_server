# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2018-09-25 21:24
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_activity_created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('company_activity_text', models.TextField(max_length=1000)),
                ('company_activity_img', models.CharField(blank=True, max_length=300, null=True)),
                ('company_activity_youtube', models.CharField(blank=True, max_length=300, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ActivityLike',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_activity_like_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('activity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='supporting_business.Activity')),
            ],
        ),
        migrations.CreateModel(
            name='AdditionalUserInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('auth', models.CharField(blank=True, default='', max_length=10, null=True)),
                ('avatar', models.ImageField(blank=True, default='', null=True, upload_to='uploads/user/avatar')),
                ('startup', models.CharField(blank=True, default='', max_length=30, null=True)),
                ('agreement', models.BooleanField(default=True)),
                ('repre_name', models.CharField(blank=True, default='', max_length=30, null=True)),
                ('repre_tel', models.CharField(blank=True, default='', max_length=30, null=True)),
                ('repre_email', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('mng_name', models.CharField(blank=True, default='', max_length=30, null=True)),
                ('mng_tel', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('mng_phone', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('mng_email', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('mng_position', models.CharField(blank=True, default='', max_length=20, null=True)),
                ('mng_bonbu', models.CharField(blank=True, max_length=20, null=True)),
                ('mng_kikwan', models.CharField(blank=True, max_length=20, null=True)),
                ('mng_team', models.CharField(blank=True, max_length=20, null=True)),
                ('mng_date_joined_ymd', models.DateTimeField(auto_now_add=True)),
                ('mng_website', models.CharField(blank=True, max_length=100, null=True)),
                ('sns', models.CharField(blank=True, max_length=100, null=True)),
                ('facebook', models.CharField(blank=True, max_length=1, null=True)),
                ('twitter', models.CharField(blank=True, max_length=1, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Alarm',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alarm_content', models.CharField(blank=True, max_length=500, null=True)),
                ('alarm_category', models.CharField(blank=True, max_length=2, null=True)),
                ('alarm_read', models.BooleanField(default=False)),
                ('alarm_created_at', models.DateTimeField(auto_now_add=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Appliance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('established_date', models.DateField(blank=True, null=True)),
                ('address_0', models.CharField(blank=True, default='', max_length=400, null=True)),
                ('address_1', models.CharField(blank=True, default='', max_length=400, null=True)),
                ('repre_name', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('repre_tel', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('repre_email', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('mark_name', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('mark_tel', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('mark_email', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('company_total_employee', models.CharField(blank=True, default='', max_length=20, null=True)),
                ('company_hold_employee', models.CharField(blank=True, default='', max_length=20, null=True)),
                ('company_assurance_employee', models.CharField(blank=True, default='', max_length=20, null=True)),
                ('raw_filter_list', models.CharField(blank=True, max_length=3000, null=True)),
                ('revenue_before_0', models.CharField(blank=True, default='', max_length=20, null=True)),
                ('revenue_before_1', models.CharField(blank=True, default='', max_length=20, null=True)),
                ('revenue_before_2', models.CharField(blank=True, default='', max_length=20, null=True)),
                ('revenue_before_year_0', models.CharField(blank=True, default='', max_length=5, null=True)),
                ('revenue_before_year_1', models.CharField(blank=True, default='', max_length=5, null=True)),
                ('revenue_before_year_2', models.CharField(blank=True, default='', max_length=5, null=True)),
                ('export_before_year_0', models.CharField(blank=True, default='', max_length=5, null=True)),
                ('export_before_year_1', models.CharField(blank=True, default='', max_length=5, null=True)),
                ('export_before_year_2', models.CharField(blank=True, default='', max_length=5, null=True)),
                ('export_before_0', models.CharField(blank=True, default='', max_length=20, null=True)),
                ('export_before_1', models.CharField(blank=True, default='', max_length=20, null=True)),
                ('export_before_2', models.CharField(blank=True, default='', max_length=20, null=True)),
                ('export_before_nation_0', models.CharField(blank=True, default='', max_length=20, null=True)),
                ('export_before_nation_1', models.CharField(blank=True, default='', max_length=20, null=True)),
                ('export_before_nation_2', models.CharField(blank=True, default='', max_length=20, null=True)),
                ('company_kind', models.CharField(blank=True, max_length=10, null=True)),
                ('company_keyword', models.CharField(blank=True, max_length=1000, null=True)),
                ('company_website', models.CharField(blank=True, max_length=100, null=True)),
                ('company_intro', models.TextField(blank=True, default='', null=True)),
                ('attached_ppt_file', models.CharField(blank=True, default='', max_length=1000, null=True)),
                ('attached_cert_file', models.CharField(blank=True, default='', max_length=1000, null=True)),
                ('attached_ir_file', models.CharField(blank=True, default='', max_length=1000, null=True)),
                ('attached_tax_file', models.CharField(blank=True, default='', max_length=1000, null=True)),
                ('attached_fund_file', models.CharField(blank=True, default='', max_length=1000, null=True)),
                ('attached_ip_file', models.CharField(blank=True, default='', max_length=1000, null=True)),
                ('attached_etc_file', models.CharField(blank=True, default='', max_length=1000, null=True)),
                ('etc_file_title_by_mng', models.TextField(blank=True, null=True)),
                ('company_instagram', models.CharField(blank=True, max_length=200, null=True)),
                ('company_youtube', models.CharField(blank=True, max_length=300, null=True)),
                ('company_facebook', models.CharField(blank=True, max_length=300, null=True)),
                ('appliance_created_at_ymdt', models.DateTimeField(auto_now_add=True, null=True)),
                ('appliance_update_at_ymdt', models.DateTimeField(auto_now_add=True, null=True)),
                ('is_submit', models.BooleanField(default=False)),
                ('img_data_url', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='ApplianceHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_history_year', models.CharField(blank=True, max_length=10, null=True)),
                ('company_history_month', models.CharField(blank=True, max_length=2, null=True)),
                ('company_history_content', models.TextField()),
                ('appliance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='supporting_business.Appliance')),
            ],
        ),
        migrations.CreateModel(
            name='ApplianceInvest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_invest_year', models.DateField(blank=True, max_length=5, null=True)),
                ('company_invest_size', models.CharField(blank=True, max_length=10, null=True)),
                ('company_invest_agency', models.CharField(blank=True, max_length=100, null=True)),
                ('applicance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='supporting_business.Appliance')),
            ],
        ),
        migrations.CreateModel(
            name='ApplianceService',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_name', models.CharField(blank=True, max_length=300, null=True)),
                ('service_intro', models.TextField()),
                ('appliance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='supporting_business.Appliance')),
            ],
        ),
        migrations.CreateModel(
            name='ApplianceSnapShot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('companay_name', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('established_date', models.DateField(blank=True, null=True)),
                ('address_0', models.CharField(blank=True, default='', max_length=400, null=True)),
                ('address_1', models.CharField(blank=True, default='', max_length=400, null=True)),
                ('repre_name', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('repre_tel', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('repre_email', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('mark_name', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('mark_tel', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('mark_email', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('company_total_employee', models.CharField(blank=True, default='', max_length=20, null=True)),
                ('company_hold_employee', models.CharField(blank=True, default='', max_length=20, null=True)),
                ('company_assurance_employee', models.CharField(blank=True, default='', max_length=20, null=True)),
                ('raw_filter_list', models.CharField(blank=True, max_length=3000, null=True)),
                ('revenue_before_0', models.CharField(blank=True, default='', max_length=20, null=True)),
                ('revenue_before_1', models.CharField(blank=True, default='', max_length=20, null=True)),
                ('revenue_before_2', models.CharField(blank=True, default='', max_length=20, null=True)),
                ('revenue_before_year_0', models.CharField(blank=True, default='', max_length=5, null=True)),
                ('revenue_before_year_1', models.CharField(blank=True, default='', max_length=5, null=True)),
                ('revenue_before_year_2', models.CharField(blank=True, default='', max_length=5, null=True)),
                ('export_before_year_0', models.CharField(blank=True, default='', max_length=5, null=True)),
                ('export_before_year_1', models.CharField(blank=True, default='', max_length=5, null=True)),
                ('export_before_year_2', models.CharField(blank=True, default='', max_length=5, null=True)),
                ('export_before_0', models.CharField(blank=True, default='', max_length=20, null=True)),
                ('export_before_1', models.CharField(blank=True, default='', max_length=20, null=True)),
                ('export_before_2', models.CharField(blank=True, default='', max_length=20, null=True)),
                ('export_before_nation_0', models.CharField(blank=True, default='', max_length=20, null=True)),
                ('export_before_nation_1', models.CharField(blank=True, default='', max_length=20, null=True)),
                ('export_before_nation_2', models.CharField(blank=True, default='', max_length=20, null=True)),
                ('company_kind', models.CharField(blank=True, max_length=10, null=True)),
                ('company_keyword', models.CharField(blank=True, max_length=1000, null=True)),
                ('company_website', models.CharField(blank=True, max_length=100, null=True)),
                ('company_intro', models.TextField(blank=True, default='', null=True)),
                ('attached_ppt_file', models.CharField(blank=True, default='', max_length=1000, null=True)),
                ('attached_cert_file', models.CharField(blank=True, default='', max_length=1000, null=True)),
                ('attached_ir_file', models.CharField(blank=True, default='', max_length=1000, null=True)),
                ('attached_tax_file', models.CharField(blank=True, default='', max_length=1000, null=True)),
                ('attached_fund_file', models.CharField(blank=True, default='', max_length=1000, null=True)),
                ('attached_ip_file', models.CharField(blank=True, default='', max_length=1000, null=True)),
                ('attached_etc_file', models.CharField(blank=True, default='', max_length=1000, null=True)),
                ('etc_file_title_by_mng', models.TextField(blank=True, null=True)),
                ('company_instagram', models.CharField(blank=True, max_length=200, null=True)),
                ('company_youtube', models.CharField(blank=True, max_length=300, null=True)),
                ('company_facebook', models.CharField(blank=True, max_length=300, null=True)),
                ('appliance_created_at_ymdt', models.DateTimeField(auto_now_add=True, null=True)),
                ('appliance_update_at_ymdt', models.DateField(auto_now_add=True, null=True)),
                ('is_submit', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Award',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('award_update_at', models.DateTimeField(auto_now_add=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Clip',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('clip_title', models.CharField(blank=True, max_length=200, null=True)),
                ('clip_youtube', models.CharField(blank=True, max_length=100, null=True)),
                ('clip_mov_url', models.CharField(blank=True, max_length=200, null=True)),
                ('clip_thumb', models.CharField(blank=True, max_length=400, null=True)),
                ('clip_object', models.CharField(blank=True, max_length=300, null=True)),
                ('clip_info', models.TextField()),
                ('clip_play', models.IntegerField(blank=True, null=True)),
                ('clip_created_at', models.DateField(auto_now_add=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CompanyInvest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_invest_year', models.DateField(blank=True, max_length=5, null=True)),
                ('company_invest_size', models.CharField(blank=True, max_length=10, null=True)),
                ('company_invest_agency', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CompletedClip',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('complete_date', models.DateField(auto_now_add=True)),
                ('complete_clip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='supporting_business.Clip')),
                ('complete_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='supporting_business.AdditionalUserInfo')),
            ],
        ),
        migrations.CreateModel(
            name='CompletedCourse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('complete_date', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='CompletedPath',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('complete_date', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course_title', models.CharField(blank=True, max_length=200, null=True)),
                ('course_thumb', models.CharField(blank=True, max_length=400, null=True)),
                ('course_rec_dur', models.CharField(blank=True, max_length=300, null=True)),
                ('course_object', models.CharField(blank=True, max_length=300, null=True)),
                ('course_info', models.TextField()),
                ('course_total_play', models.IntegerField(blank=True, null=True)),
                ('course_created_at', models.DateField(auto_now_add=True, null=True)),
                ('course_clips', models.ManyToManyField(to='supporting_business.Clip')),
            ],
        ),
        migrations.CreateModel(
            name='EduFilter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='EmailConfirmation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.CharField(max_length=300)),
                ('confirmation_code', models.CharField(max_length=300)),
                ('confirm', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='FavoredSupportBusiness',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('favored_timestamp', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='FavoriteClipLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('favorite_clip_up_down', models.IntegerField(default=0)),
                ('favorite_date', models.DateField(auto_now_add=True)),
                ('favorite_clip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='supporting_business.Clip')),
                ('favorite_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='supporting_business.AdditionalUserInfo')),
            ],
        ),
        migrations.CreateModel(
            name='FavoriteCourseLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('favorite_course_up_down', models.IntegerField(default=0)),
                ('favorite_date', models.DateField(auto_now_add=True)),
                ('favorite_course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='supporting_business.Course')),
                ('favorite_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='supporting_business.AdditionalUserInfo')),
            ],
        ),
        migrations.CreateModel(
            name='FavoriteLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now_add=True)),
                ('up_down', models.IntegerField(max_length=1)),
                ('clip', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='supporting_business.Clip')),
                ('course', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='supporting_business.Course')),
            ],
        ),
        migrations.CreateModel(
            name='FavoritePathLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('favorite_path_up_down', models.IntegerField(default=0)),
                ('favorite_date', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='FilterForStatics',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cat_0', models.CharField(max_length=100)),
                ('cat_1', models.CharField(blank=True, max_length=100, null=True)),
                ('filter_name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='History',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_history_year', models.CharField(blank=True, max_length=10, null=True)),
                ('company_history_month', models.CharField(blank=True, max_length=2, null=True)),
                ('company_history_content', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='HitClipLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hit_clip_date', models.DateField(auto_now_add=True)),
                ('hit_clip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='supporting_business.Clip')),
                ('hit_clip_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='supporting_business.AdditionalUserInfo')),
            ],
        ),
        migrations.CreateModel(
            name='HitCourseLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hit_course_date', models.DateField(auto_now_add=True)),
                ('hit_course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='supporting_business.Course')),
                ('hit_course_clip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='supporting_business.Clip')),
                ('hit_course_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='supporting_business.AdditionalUserInfo')),
            ],
        ),
        migrations.CreateModel(
            name='HitLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='HitPathLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hit_path_date', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='LineGraphTable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('linegraph_date', models.DateField(auto_now_add=True)),
                ('linegraph_visitied', models.IntegerField(default=0)),
                ('linegraph_favored', models.IntegerField(default=0)),
                ('linegraph_applicant', models.IntegerField(default=0)),
                ('linegraph_user_id_list', models.CharField(blank=True, max_length=30, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Path',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('path_title', models.CharField(blank=True, max_length=200, null=True)),
                ('path_thumb', models.CharField(blank=True, max_length=400, null=True)),
                ('path_rec_dur', models.CharField(blank=True, max_length=300, null=True)),
                ('path_object', models.CharField(blank=True, max_length=300, null=True)),
                ('path_info', models.TextField()),
                ('path_total_play', models.IntegerField(blank=True, null=True)),
                ('path_created_at', models.DateField(auto_now_add=True, null=True)),
                ('path_course', models.ManyToManyField(to='supporting_business.Course')),
                ('path_filter', models.ManyToManyField(blank=True, null=True, to='supporting_business.EduFilter')),
                ('path_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='supporting_business.AdditionalUserInfo')),
            ],
        ),
        migrations.CreateModel(
            name='RegisteredChannel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('channel_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='supporting_business.AdditionalUserInfo')),
                ('clip', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='supporting_business.Clip')),
                ('course', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='supporting_business.Course')),
                ('path', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='supporting_business.Path')),
            ],
        ),
        migrations.CreateModel(
            name='Reply',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_activity_text', models.TextField()),
                ('company_activity_created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('activity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='supporting_business.Activity')),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_img', models.CharField(blank=True, default='', max_length=300, null=True)),
                ('service_intro', models.TextField()),
                ('service_file', models.CharField(blank=True, default='', max_length=300, null=True)),
                ('service_name', models.CharField(blank=True, max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Startup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(blank=True, max_length=100, null=True)),
                ('established_date', models.DateField(blank=True, null=True)),
                ('logo', models.CharField(blank=True, max_length=1000, null=True)),
                ('back_img', models.CharField(blank=True, max_length=1000, null=True)),
                ('company_short_desc', models.CharField(blank=True, max_length=1000, null=True)),
                ('company_intro', models.CharField(blank=True, max_length=1000, null=True)),
                ('company_youtube', models.CharField(blank=True, max_length=300, null=True)),
                ('company_facebook', models.CharField(blank=True, max_length=300, null=True)),
                ('company_instagram', models.CharField(blank=True, max_length=300, null=True)),
                ('company_website', models.CharField(blank=True, default='', max_length=300, null=True)),
                ('address_0', models.CharField(blank=True, default='', max_length=400, null=True)),
                ('address_1', models.CharField(blank=True, default='', max_length=400, null=True)),
                ('repre_name', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('repre_email', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('repre_tel', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('mark_name', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('mark_email', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('mark_tel', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('company_keyword', models.CharField(blank=True, default='', max_length=300, null=True)),
                ('company_total_employee', models.CharField(blank=True, default='', max_length=20, null=True)),
                ('company_hold_employee', models.CharField(blank=True, default='', max_length=20, null=True)),
                ('company_assurance_employee', models.CharField(blank=True, default='', max_length=20, null=True)),
                ('revenue_before_year_0', models.CharField(blank=True, default='', max_length=5, null=True)),
                ('revenue_before_year_1', models.CharField(blank=True, default='', max_length=5, null=True)),
                ('revenue_before_year_2', models.CharField(blank=True, default='', max_length=5, null=True)),
                ('revenue_before_0', models.CharField(blank=True, default='', max_length=20, null=True)),
                ('revenue_before_1', models.CharField(blank=True, default='', max_length=20, null=True)),
                ('revenue_before_2', models.CharField(blank=True, default='', max_length=20, null=True)),
                ('export_before_year_0', models.CharField(blank=True, default='', max_length=5, null=True)),
                ('export_before_year_1', models.CharField(blank=True, default='', max_length=5, null=True)),
                ('export_before_year_2', models.CharField(blank=True, default='', max_length=5, null=True)),
                ('export_before_0', models.CharField(blank=True, default='', max_length=20, null=True)),
                ('export_before_1', models.CharField(blank=True, default='', max_length=20, null=True)),
                ('export_before_2', models.CharField(blank=True, default='', max_length=20, null=True)),
                ('export_before_nation_0', models.CharField(blank=True, default='', max_length=20, null=True)),
                ('export_before_nation_1', models.CharField(blank=True, default='', max_length=20, null=True)),
                ('export_before_nation_2', models.CharField(blank=True, default='', max_length=20, null=True)),
                ('ip_chk', models.BooleanField(default=True)),
                ('revenue_chk', models.BooleanField(default=True)),
                ('export_chk', models.BooleanField(default=True)),
                ('company_invest_chk', models.BooleanField(default=True)),
                ('company_kind', models.CharField(blank=True, max_length=10, null=True)),
                ('attached_ip_file', models.CharField(blank=True, max_length=500, null=True)),
                ('attached_ir_file', models.CharField(blank=True, max_length=500, null=True)),
                ('attached_cert_file', models.CharField(blank=True, max_length=500, null=True)),
                ('attached_tax_file', models.CharField(blank=True, max_length=500, null=True)),
                ('attached_fund_file', models.CharField(blank=True, max_length=500, null=True)),
                ('attached_ppt_file', models.CharField(blank=True, max_length=500, null=True)),
                ('attached_etc_file', models.CharField(blank=True, max_length=500, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='StatTable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stat_name', models.CharField(blank=True, max_length=32, null=True)),
                ('stat_json', models.TextField()),
                ('stat_timestamp', models.DateTimeField(auto_now_add=True)),
                ('stat_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='supporting_business.AdditionalUserInfo')),
            ],
        ),
        migrations.CreateModel(
            name='SupportBusiness',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('support_business_created_at_ymdt', models.DateTimeField(auto_now_add=True, null=True)),
                ('support_business_name', models.CharField(blank=True, default='', max_length=300, null=True)),
                ('support_business_name_tag', models.CharField(blank=True, default='', max_length=300, null=True)),
                ('support_business_name_sub', models.CharField(blank=True, default='', max_length=300, null=True)),
                ('support_business_poster', models.CharField(blank=True, max_length=1000, null=True)),
                ('support_business_short_desc', models.CharField(blank=True, default='', max_length=14, null=True)),
                ('support_business_subject', models.TextField(blank=True, null=True)),
                ('support_business_detail', models.TextField(blank=True, null=True)),
                ('support_business_apply_start_ymd', models.DateTimeField(blank=True, null=True)),
                ('support_business_apply_end_ymdt', models.DateTimeField(blank=True, null=True)),
                ('support_business_object', models.TextField(blank=True, default='', null=True)),
                ('support_business_recruit_size', models.CharField(blank=True, default='', max_length=30, null=True)),
                ('support_business_prefer', models.TextField(blank=True, default='', null=True)),
                ('support_business_constraint', models.TextField(blank=True, default='', null=True)),
                ('support_business_choose_method', models.TextField(blank=True, default='', null=True)),
                ('support_business_pro_0_choose', models.TextField(blank=True, default='', null=True)),
                ('support_business_pro_0_start_ymd', models.DateField(blank=True, null=True)),
                ('support_business_pro_0_end_ymd', models.DateField(blank=True, null=True)),
                ('support_business_pro_0_open_ymd', models.DateField(blank=True, null=True)),
                ('support_business_pro_0_criterion', models.TextField(blank=True, default='', null=True)),
                ('support_business_pro_1_choose', models.TextField(blank=True, default='', null=True)),
                ('support_business_pro_1_start_ymd', models.DateField(blank=True, null=True)),
                ('support_business_pro_1_end_ymd', models.DateField(blank=True, null=True)),
                ('support_business_pro_1_open_ymd', models.DateField(blank=True, null=True)),
                ('support_business_pro_1_criterion', models.TextField(blank=True, default='', null=True)),
                ('support_business_pro_2_choose', models.TextField(blank=True, default='', null=True)),
                ('support_business_pro_2_start_ymd', models.DateField(blank=True, null=True)),
                ('support_business_pro_2_end_ymd', models.DateField(blank=True, null=True)),
                ('support_business_pro_2_open_ymd', models.DateField(blank=True, null=True)),
                ('support_business_pro_2_criterion', models.TextField(blank=True, default='', null=True)),
                ('support_business_supply_content', models.TextField(blank=True, default='', null=True)),
                ('mng_support_business_step_6_etc_input', models.TextField()),
                ('support_business_ceremony_start_ymd', models.DateField(blank=True, null=True)),
                ('support_business_ceremony_end_ymd', models.DateField(blank=True, null=True)),
                ('support_business_faq', models.TextField(blank=True, default='', null=True)),
                ('support_business_additional_faq', models.TextField(blank=True, default='', null=True)),
                ('mng_support_business_step_6_etc_input_chk', models.BooleanField(default=False)),
                ('support_business_ceremony_chk', models.BooleanField(default=False)),
                ('support_business_faq_chk', models.BooleanField(default=False)),
                ('support_business_additional_faq_chk', models.BooleanField(default=False)),
                ('support_business_etc_input_chk', models.CharField(blank=True, max_length=100, null=True)),
                ('support_business_meta', models.CharField(blank=True, default='', max_length=1000, null=True)),
                ('support_business_update_at_ymdt', models.DateTimeField(auto_now_add=True, null=True)),
                ('support_business_hit', models.IntegerField(default=0)),
                ('support_business_complete', models.BooleanField(default=False)),
                ('support_business_award_date_ymd', models.DateField(blank=True, null=True)),
                ('support_business_meta_0', models.CharField(blank=True, max_length=100, null=True)),
                ('mng_support_business_step_3_etc_input_mojipjogun', models.CharField(blank=True, max_length=100, null=True)),
                ('mng_support_business_step_3_etc_input_mojipgenre', models.CharField(blank=True, max_length=100, null=True)),
                ('support_business_status', models.CharField(blank=True, max_length=10, null=True)),
                ('support_business_prefer_chk', models.BooleanField(default=False)),
                ('support_business_constraint_chk', models.BooleanField(default=False)),
                ('support_business_etc_file_title_mng', models.CharField(blank=True, default='', max_length=1000, null=True)),
                ('support_business_appliance_form', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('support_business_poster_data_url', models.TextField(blank=True, default='', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SupportBusinessApplicant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('applicant_timestamp', models.DateField(auto_now_add=True)),
                ('applicant_support_business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='supporting_business.SupportBusiness')),
                ('applicant_usr', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='supporting_business.AdditionalUserInfo')),
                ('applicant_usr_filter', models.ManyToManyField(to='supporting_business.FilterForStatics')),
            ],
        ),
        migrations.CreateModel(
            name='SupportBusinessAwarded',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('awarded_timestamp', models.DateField(auto_now_add=True)),
                ('awarded_support_business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='supporting_business.SupportBusiness')),
                ('awarded_usr', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='supporting_business.AdditionalUserInfo')),
                ('awarded_usr_filter', models.ManyToManyField(to='supporting_business.FilterForStatics')),
            ],
        ),
        migrations.CreateModel(
            name='SupportBusinessFilter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cat_0', models.CharField(max_length=100)),
                ('cat_1', models.CharField(blank=True, max_length=100, null=True)),
                ('filter_name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='VisitedSupportBusiness',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('visited_timestamp', models.DateField(auto_now_add=True)),
                ('visited_support_business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='supporting_business.SupportBusiness')),
                ('visited_usr', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='supporting_business.AdditionalUserInfo')),
                ('visited_usr_filter', models.ManyToManyField(to='supporting_business.FilterForStatics')),
            ],
        ),
        migrations.CreateModel(
            name='WatchHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('watch_date', models.DateField(auto_now_add=True)),
                ('watch_clip', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='supporting_business.Clip')),
                ('watch_course', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='supporting_business.Course')),
                ('watch_path', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='supporting_business.Path')),
                ('watch_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='supporting_business.AdditionalUserInfo')),
            ],
        ),
        migrations.AddField(
            model_name='supportbusiness',
            name='selected_support_business_filter_list',
            field=models.ManyToManyField(db_table='company_filter_with_supportbusiness', to='supporting_business.SupportBusinessFilter'),
        ),
        migrations.AddField(
            model_name='supportbusiness',
            name='support_business_author',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='supporting_business.AdditionalUserInfo'),
        ),
        migrations.AddField(
            model_name='supportbusiness',
            name='support_business_relate_support_business',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='supporting_business.SupportBusiness'),
        ),
        migrations.AddField(
            model_name='startup',
            name='selected_company_filter_list',
            field=models.ManyToManyField(blank=True, db_table='company_filter_with_startup', null=True, to='supporting_business.SupportBusinessFilter'),
        ),
        migrations.AddField(
            model_name='startup',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='service',
            name='startup',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='supporting_business.Startup'),
        ),
        migrations.AddField(
            model_name='reply',
            name='company_activity_author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='supporting_business.Startup'),
        ),
        migrations.AddField(
            model_name='linegraphtable',
            name='linegraph_support_business',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='supporting_business.SupportBusiness'),
        ),
        migrations.AddField(
            model_name='hitpathlog',
            name='hit_path',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='supporting_business.Path'),
        ),
        migrations.AddField(
            model_name='hitpathlog',
            name='hit_path_clip',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='supporting_business.Clip'),
        ),
        migrations.AddField(
            model_name='hitpathlog',
            name='hit_path_course',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='supporting_business.Course'),
        ),
        migrations.AddField(
            model_name='hitpathlog',
            name='hit_path_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='supporting_business.AdditionalUserInfo'),
        ),
        migrations.AddField(
            model_name='hitlog',
            name='support_business',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='supporting_business.SupportBusiness'),
        ),
        migrations.AddField(
            model_name='hitlog',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='supporting_business.AdditionalUserInfo'),
        ),
        migrations.AddField(
            model_name='history',
            name='startup',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='supporting_business.Startup'),
        ),
        migrations.AddField(
            model_name='favoritepathlog',
            name='favorite_path',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='supporting_business.Path'),
        ),
        migrations.AddField(
            model_name='favoritepathlog',
            name='favorite_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='supporting_business.AdditionalUserInfo'),
        ),
        migrations.AddField(
            model_name='favoritelog',
            name='path',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='supporting_business.Path'),
        ),
        migrations.AddField(
            model_name='favoritelog',
            name='startup',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='supporting_business.Startup'),
        ),
        migrations.AddField(
            model_name='favoritelog',
            name='support_business',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='supporting_business.SupportBusiness'),
        ),
        migrations.AddField(
            model_name='favoritelog',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='supporting_business.AdditionalUserInfo'),
        ),
        migrations.AddField(
            model_name='favoredsupportbusiness',
            name='favored_support_business',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='supporting_business.SupportBusiness'),
        ),
        migrations.AddField(
            model_name='favoredsupportbusiness',
            name='favored_usr',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='supporting_business.AdditionalUserInfo'),
        ),
        migrations.AddField(
            model_name='favoredsupportbusiness',
            name='favored_usr_filter',
            field=models.ManyToManyField(to='supporting_business.FilterForStatics'),
        ),
        migrations.AddField(
            model_name='course',
            name='course_filter',
            field=models.ManyToManyField(blank=True, null=True, to='supporting_business.EduFilter'),
        ),
        migrations.AddField(
            model_name='course',
            name='course_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='supporting_business.AdditionalUserInfo'),
        ),
        migrations.AddField(
            model_name='completedpath',
            name='complete_path',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='supporting_business.Path'),
        ),
        migrations.AddField(
            model_name='completedpath',
            name='complete_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='supporting_business.AdditionalUserInfo'),
        ),
        migrations.AddField(
            model_name='completedcourse',
            name='complete_course',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='supporting_business.Course'),
        ),
        migrations.AddField(
            model_name='completedcourse',
            name='complete_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='supporting_business.AdditionalUserInfo'),
        ),
        migrations.AddField(
            model_name='companyinvest',
            name='startup',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='supporting_business.Startup'),
        ),
        migrations.AddField(
            model_name='clip',
            name='clip_filter',
            field=models.ManyToManyField(to='supporting_business.EduFilter'),
        ),
        migrations.AddField(
            model_name='clip',
            name='clip_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='supporting_business.AdditionalUserInfo'),
        ),
        migrations.AddField(
            model_name='award',
            name='startup',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='supporting_business.Startup'),
        ),
        migrations.AddField(
            model_name='award',
            name='support_business',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='supporting_business.SupportBusiness'),
        ),
        migrations.AddField(
            model_name='appliancesnapshot',
            name='selected_company_filter_list',
            field=models.ManyToManyField(db_table='company_filter_with_appliance_snapshot', to='supporting_business.SupportBusinessFilter'),
        ),
        migrations.AddField(
            model_name='appliancesnapshot',
            name='startup',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='supporting_business.Startup'),
        ),
        migrations.AddField(
            model_name='appliancesnapshot',
            name='support_business',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='supporting_business.SupportBusiness'),
        ),
        migrations.AddField(
            model_name='applianceservice',
            name='startup',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='supporting_business.Startup'),
        ),
        migrations.AddField(
            model_name='appliance',
            name='selected_company_filter_list',
            field=models.ManyToManyField(db_table='company_filter_with_appliance', to='supporting_business.SupportBusinessFilter'),
        ),
        migrations.AddField(
            model_name='appliance',
            name='startup',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='supporting_business.Startup'),
        ),
        migrations.AddField(
            model_name='appliance',
            name='support_business',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='supporting_business.SupportBusiness'),
        ),
        migrations.AddField(
            model_name='alarm',
            name='alarm_origin_st',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='supporting_business.Startup'),
        ),
        migrations.AddField(
            model_name='alarm',
            name='alarm_origin_support_business',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='supporting_business.SupportBusiness'),
        ),
        migrations.AddField(
            model_name='alarm',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='supporting_business.AdditionalUserInfo'),
        ),
        migrations.AddField(
            model_name='additionaluserinfo',
            name='favorite',
            field=models.ManyToManyField(blank=True, null=True, to='supporting_business.SupportBusiness'),
        ),
        migrations.AddField(
            model_name='additionaluserinfo',
            name='favorite_clip',
            field=models.ManyToManyField(blank=True, null=True, to='supporting_business.Clip'),
        ),
        migrations.AddField(
            model_name='additionaluserinfo',
            name='favorite_course',
            field=models.ManyToManyField(blank=True, null=True, to='supporting_business.Course'),
        ),
        migrations.AddField(
            model_name='additionaluserinfo',
            name='favorite_path',
            field=models.ManyToManyField(blank=True, null=True, to='supporting_business.Path'),
        ),
        migrations.AddField(
            model_name='additionaluserinfo',
            name='favorite_startup',
            field=models.ManyToManyField(blank=True, null=True, to='supporting_business.Startup'),
        ),
        migrations.AddField(
            model_name='additionaluserinfo',
            name='mng_boss',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='supporting_business.AdditionalUserInfo'),
        ),
        migrations.AddField(
            model_name='additionaluserinfo',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='activitylike',
            name='company_activity_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='supporting_business.AdditionalUserInfo'),
        ),
        migrations.AddField(
            model_name='activity',
            name='startup',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='supporting_business.Startup'),
        ),
    ]
